CREATE TABLE Courses
(
  Code  NUMBER(8) ,
  Name VARCHAR2(100) NOT NULL,
  Duration  NUMBER(8) ,
  PRIMARY KEY (Code)
);

CREATE TABLE CDepartments
(
  ID  NUMBER(8) ,
  Name VARCHAR2(100) NOT NULL,
  Manager_ID NUMBER(8),
  start_date date,
  PRIMARY KEY (ID)
);

CREATE TABLE Instructors
(
  Name VARCHAR2(100) NOT NULL,
  ID  NUMBER(8) ,
  Phone VARCHAR2(100) ,
  Email VARCHAR2(100),
  DOB DATE ,
  Hire_Date DATE ,
  DEP_ID  NUMBER(8) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (DEP_ID) REFERENCES CDepartments(ID)
);

ALTER TABLE CDepartments
ADD CONSTRAINT fk_manager_department
FOREIGN KEY (Manager_ID)
REFERENCES INSTRUCTORS(ID);

CREATE TABLE Ins_Courses
(
  Code  NUMBER(8) ,
  INS_ID  NUMBER(8) ,
  year DATE,
  PRIMARY KEY (Code, INS_ID, year),
  FOREIGN KEY (Code) REFERENCES Courses(Code),
  FOREIGN KEY (INS_ID) REFERENCES Instructors(ID)
);

CREATE TABLE Dep_Courses
(
  Code  NUMBER(8) ,
  DEP_ID  NUMBER(8) ,
  PRIMARY KEY (Code, DEP_ID),
  FOREIGN KEY (Code) REFERENCES Courses(Code),
  FOREIGN KEY (DEP_ID) REFERENCES CDepartments(ID)
);

CREATE TABLE Prerequisites
(
  Code  NUMBER(8) ,
  PrerequisiteCode  NUMBER(8) ,
  PRIMARY KEY (Code, PrerequisiteCode),
  FOREIGN KEY (Code) REFERENCES Courses(Code),
  FOREIGN KEY (PrerequisiteCode) REFERENCES Courses(Code)
);

CREATE TABLE Student
(
  ID  NUMBER(8) ,
  Name VARCHAR2(100) ,
  DOB date ,
  email VARCHAR2(200),
  City VARCHAR2(200) ,
  Street VARCHAR2(200) ,
  DEP_ID  NUMBER(8) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (DEP_ID) REFERENCES CDepartments(ID)
);

CREATE TABLE Enrollments
(
  grade VARCHAR2(10) ,
  STU_ID  NUMBER(8) ,
  Code  NUMBER(8) ,
  year Date,
  PRIMARY KEY (STU_ID, Code, year),
  FOREIGN KEY (STU_ID) REFERENCES Student(ID),
  FOREIGN KEY (Code) REFERENCES Courses(Code)
);


CREATE TABLE Student_mobile
(
  mobile VARCHAR2(100) ,
  ID  NUMBER(8) ,
  PRIMARY KEY (mobile, ID),
  FOREIGN KEY (ID) REFERENCES Student(ID)
);

CREATE TABLE USERS
(
    USERNAME    VARCHAR2 (50) PRIMARY KEY,
    PASSWORD    VARCHAR2 (50),
    EMAIL       VARCHAR2 (50),
    PHONE       VARCHAR2 (50)
);

CREATE TABLE NOTIFICATIONS
(
    STUDENT_NAME     NUMBER(8),
    DESCRIPTION VARCHAR2(500),
    CONSTRAINT FK6 FOREIGN KEY (STUDENT_NAME) REFERENCES STUDENT (ID)
);

ALTER TABLE ENROLLMENTS
    RENAME COLUMN YEAR TO TEMP;

ALTER TABLE ENROLLMENTS
    ADD YEAR VARCHAR2 (50);

UPDATE ENROLLMENTS
   SET YEAR = TO_CHAR (TEMP, 'yyyy');

ALTER TABLE ENROLLMENTS
    ADD SEMESTER VARCHAR2 (50);

UPDATE ENROLLMENTS
   SET SEMESTER =
           CASE
               WHEN TO_CHAR (TEMP, 'yyyy') BETWEEN 2004 AND 2012
               THEN
                   'First'
               WHEN TO_CHAR (TEMP, 'yyyy') BETWEEN 2021 AND 2024
               THEN
                   'Summer'
               WHEN TO_CHAR (TEMP, 'yyyy') BETWEEN 2013 AND 2020
               THEN
                   'Second'
           END;

ALTER TABLE ENROLLMENTS
    DROP CONSTRAINT PK_ENROLLMENTS;

ALTER TABLE ENROLLMENTS
    DROP COLUMN TEMP;

ALTER TABLE ENROLLMENTS
ADD CONSTRAINT PK_ENROLLMENTS PRIMARY KEY (STU_ID, CODE, YEAR, SEMESTER);

UPDATE ENROLLMENTS
   SET GRADE =
           CASE GRADE
               WHEN 'A+' THEN '98'
               WHEN 'A' THEN '92'
               WHEN 'B' THEN '85'
               WHEN 'C' THEN '75'
               WHEN 'D' THEN '65'
               WHEN 'F' THEN '50'
           END;

ALTER TABLE STUDENT
    ADD STATUS VARCHAR2 (20);

UPDATE STUDENT
   SET STATUS = 'Graduate';

   
